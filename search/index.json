[{"content":"What is Maven? The result is a tool that can now be used for building and managing any Java-based project.\nMaven\u0026rsquo;s Objectives\nMaking the build process easy Providing a uniform build system Providing quality project information Encouraging better development practices Maven in 5 Minutes installation 1 mvn --version Creating a Project\n1 mvn archetype:generate -DgroupId=com.mycompany.app -DartifactId=my-app -DarchetypeArtifactId=maven-archetype-quickstart -DarchetypeVersion=1.5 -DinteractiveMode=false 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 my-app |-- pom.xml `-- src |-- main | `-- java | `-- com | `-- mycompany | `-- app | `-- App.java `-- test `-- java `-- com `-- mycompany `-- app `-- AppTest.java The src/main/java directory contains the project source code.\nThe src/test/java directory contains the test source.\nThe pom.xml file is the project\u0026rsquo;s Project Object Model, or POM.\nThis is a Maven convention and to learn more about it you can read our Introduction to the Standard Directory Layout.\nThe POM\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 \u0026lt;project xmlns=\u0026#34;http://maven.apache.org/POM/4.0.0\u0026#34; xmlns:xsi=\u0026#34;http://www.w3.org/2001/XMLSchema-instance\u0026#34; xsi:schemaLocation=\u0026#34;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\u0026#34;\u0026gt; \u0026lt;modelVersion\u0026gt;4.0.0\u0026lt;/modelVersion\u0026gt; \u0026lt;groupId\u0026gt;com.mycompany.app\u0026lt;/groupId\u0026gt; \u0026lt;artifactId\u0026gt;my-app\u0026lt;/artifactId\u0026gt; \u0026lt;version\u0026gt;1.0-SNAPSHOT\u0026lt;/version\u0026gt; \u0026lt;name\u0026gt;my-app\u0026lt;/name\u0026gt; \u0026lt;!-- FIXME change it to the project\u0026#39;s website --\u0026gt; \u0026lt;url\u0026gt;http://www.example.com\u0026lt;/url\u0026gt; \u0026lt;properties\u0026gt; \u0026lt;project.build.sourceEncoding\u0026gt;UTF-8\u0026lt;/project.build.sourceEncoding\u0026gt; \u0026lt;maven.compiler.release\u0026gt;17\u0026lt;/maven.compiler.release\u0026gt; \u0026lt;/properties\u0026gt; \u0026lt;dependencyManagement\u0026gt; \u0026lt;dependencies\u0026gt; \u0026lt;dependency\u0026gt; \u0026lt;groupId\u0026gt;org.junit\u0026lt;/groupId\u0026gt; \u0026lt;artifactId\u0026gt;junit-bom\u0026lt;/artifactId\u0026gt; \u0026lt;version\u0026gt;5.11.0\u0026lt;/version\u0026gt; \u0026lt;type\u0026gt;pom\u0026lt;/type\u0026gt; \u0026lt;scope\u0026gt;import\u0026lt;/scope\u0026gt; \u0026lt;/dependency\u0026gt; \u0026lt;/dependencies\u0026gt; \u0026lt;/dependencyManagement\u0026gt; \u0026lt;dependencies\u0026gt; \u0026lt;dependency\u0026gt; \u0026lt;groupId\u0026gt;org.junit.jupiter\u0026lt;/groupId\u0026gt; \u0026lt;artifactId\u0026gt;junit-jupiter-api\u0026lt;/artifactId\u0026gt; \u0026lt;scope\u0026gt;test\u0026lt;/scope\u0026gt; \u0026lt;/dependency\u0026gt; \u0026lt;!-- Optionally: parameterized tests support --\u0026gt; \u0026lt;dependency\u0026gt; \u0026lt;groupId\u0026gt;org.junit.jupiter\u0026lt;/groupId\u0026gt; \u0026lt;artifactId\u0026gt;junit-jupiter-params\u0026lt;/artifactId\u0026gt; \u0026lt;scope\u0026gt;test\u0026lt;/scope\u0026gt; \u0026lt;/dependency\u0026gt; \u0026lt;/dependencies\u0026gt; \u0026lt;build\u0026gt; \u0026lt;pluginManagement\u0026gt;\u0026lt;!-- lock down plugins versions to avoid using Maven defaults (may be moved to parent pom) --\u0026gt; ... lots of helpful plugins \u0026lt;/pluginManagement\u0026gt; \u0026lt;/build\u0026gt; \u0026lt;/project\u0026gt; project This is the top-level element in all Maven pom.xml files. modelVersion This element indicates what version of the object model this POM is using. The version of the model itself changes very infrequently but it is mandatory in order to ensure stability of use if and when the Maven developers deem it necessary to change the model. groupId This element indicates the unique identifier of the organization or group that created the project. The groupId is one of the key identifiers of a project and is typically based on the fully qualified domain name of your organization. artifactId This element indicates the unique base name of the primary artifact being generated by this project. The primary artifact for a project is typically a JAR file. Secondary artifacts like source bundles also use the artifactId as part of their final name. version This element indicates the version of the artifact generated by the project. Maven goes a long way to help you with version management and you will often see the SNAPSHOT designator in a version, which indicates that a project is in a state of development. name This element indicates the display name used for the project. This is often used in Maven\u0026rsquo;s generated documentation. url This element indicates where the project\u0026rsquo;s site can be found. This is often used in Maven\u0026rsquo;s generated documentation. properties This element contains value placeholders accessible anywhere within a POM. dependencies This element\u0026rsquo;s children list dependencies. The cornerstone of the POM. build This element handles things like declaring your project\u0026rsquo;s directory structure and managing plugins. For a complete reference of what elements are available for use in the POM please refer to our POM Reference.\nBuild the Project\n1 mvn package Test the newly compiled and packaged JAR\n1 2 java -cp target/my-app-1.0-SNAPSHOT.jar com.mycompany.app.App \u0026gt; Hello World! Maven Getting Started Guide How do I compile my application sources?\n1 mvn compile How do I compile my test sources and run my unit tests?\n1 2 mvn test mvn test-compile How do I create a JAR and install it in my local repository?\n1 2 mvn package mvn install ","date":"2025-02-11T00:00:00Z","image":"https://yangzhaoxing90.github.io/p/maven/cover_hu5078302584087154681.png","permalink":"https://yangzhaoxing90.github.io/p/maven/","title":"Maven"},{"content":"The Basics Introduction to the Apache Shiro Java Security Framework Here are some things that you can do with Apache Shiro:\nAuthenticate a user to verify their identity Perform access control for a user, such as: Determine if a user is assigned a certain security role or not Determine if a user is permitted to do something or not Use a Session API in any environment, even without web or EJB containers. React to events during authentication, access control, or during a session’s lifetime. Aggregate 1 or more data sources of user security data and present this all as a single composite user \u0026lsquo;view\u0026rsquo;. Enable Single Sign On (SSO) functionality Enable \u0026lsquo;Remember Me\u0026rsquo; services for user association without login \u0026hellip; Apache Shiro Features:\nAuthentication: Sometimes referred to as \u0026rsquo;login\u0026rsquo;, this is the act of proving a user is who they say they are. Authorization: The process of access control, i.e. determining \u0026lsquo;who\u0026rsquo; has access to \u0026lsquo;what\u0026rsquo;. Session Management: Managing user-specific sessions, even in non-web or EJB applications. Cryptography: Keeping data secure using cryptographic algorithms while still being easy to use. Architecture Subject: basically anything that is currently interacting with the software SecurityManager: When you interact with a Subject, those interactions translate to subject-specific interactions with the SecurityManager Realms: Realms act as the ‘bridge’ or ‘connector’ between Shiro and your application’s security data 10 Minute Tutorial on Apache Shiro ","date":"2025-02-10T00:00:00Z","image":"https://yangzhaoxing90.github.io/p/apache-shiro/cover_hu10467585328043985690.png","permalink":"https://yangzhaoxing90.github.io/p/apache-shiro/","title":"Apache Shiro"},{"content":"站点资源 学习资源站 https://youkn0wwho.academy/topic-list\n刷题站 https://vjudge.net/\nBasics What is Programming？ pass Intro to C++ and Setting up the Environment 最后还是选择了用 vscode + glang 进行编译的方式 Data Types, Variables and Input Output 掌握基本的输入输出语法 (cin, cout) 基本数据类型 (int, long long, char, float, double) 掌握变量的用法 (const, \u0026hellip;) Operators 算术操作符 (+,-,*,/,%) 赋值操作符 (=，+=，-=，*=，/=，%=) 关系运算符 (==,!=,\u0026gt;,\u0026lt;,\u0026gt;=,\u0026lt;=) 逻辑运算符 (\u0026amp;\u0026amp;,||,!) 比特操作运算符 (\u0026amp;,|,^,~,\u0026laquo;,\u0026raquo;) 其他特殊操作符 (sizeof,?:,\u0026amp;,.,-\u0026gt;,\u0026laquo;,\u0026raquo;) Conditional Statements if else switch case Loops for while do while ","date":"2025-02-08T00:00:00Z","image":"https://yangzhaoxing90.github.io/p/topic-list/cover_hu5334211331950979651.png","permalink":"https://yangzhaoxing90.github.io/p/topic-list/","title":"Topic list"},{"content":"参考资源 旅游计划制定基础思路\n相关项目去哪些网站预定 国内：携程、飞猪、去哪了\n国际：Expedia、Booking、Agoda\n以上这些网站可以预定旅游中所需要的一切项目 （机票、酒店、民宿、车票、船票、租车等等）\n租车：微信、支付宝等，神州租车等独立的租车公司 （国外推荐 Avis 和 Hertz）\n国外特殊项目：Airbnb\n省钱的窍门 返利网站：TopCashback （英国返利网站）\n如何规划旅行时长 pass\n行程计划表 找准旅游的重点 想看风景，还是体验文化，还是体验美食等等\n多景点路径规划 使用地图软件\n旅游好物分享 卫生用品：小包的湿巾、酒精湿巾、湿厕纸\n住宿用品：小的烧水壶、折叠的衣架、淋浴拖鞋\n极力推荐：旅行睡袋 【mido house】（可以不用接触到卫生条件较差的酒店的被子等）\n了解目的地的文化习俗 如：美国的小费文化\n总结 确定旅游的重点 确定旅游的时间范围 借助相关网站确定旅游路线，食住行以及特殊项目等，同时绘制行程计划表和行程进度表 查看能否利用返利网站省钱 带好该带的东西 了解目的地的文化习俗 出发 ","date":"2025-02-08T00:00:00Z","image":"https://yangzhaoxing90.github.io/p/%E6%97%85%E6%B8%B8%E8%AE%A1%E5%88%92%E5%88%B6%E5%AE%9A%E5%9F%BA%E7%A1%80/cover_hu15959000950015708700.jpg","permalink":"https://yangzhaoxing90.github.io/p/%E6%97%85%E6%B8%B8%E8%AE%A1%E5%88%92%E5%88%B6%E5%AE%9A%E5%9F%BA%E7%A1%80/","title":"旅游计划制定基础"},{"content":"Netty 服务端构建 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 public class NettyServer { public static void main(String[] args) { /** * 新建两个线程组, boss 线程启动一条线程, 监听 OP_ACCEPT 事件 * Worker 线程组默认启动 CPU 核数*2 的线程 * 监听客户端连接的 OP_READ 和 OP_WRITE 事件, 处理 I/O 事件 */ EventLoopGroup bossGroup = new NioEventLoopGroup(); EventLoopGroup workerGroup = new NioEventLoopGroup(); try { // Netty 服务启动辅助类 ServerBootstrap serverBootstrap = new ServerBootstrap(); serverBootstrap.group(bossGroup, workerGroup); // 设置 TCP Socket 通道为 NioServerSocketChannel // 若是 UDP 则设置为 DatagramChannel serverBootstrap.channel(NioServerSocketChannel.class); // 设置一些 TCP 参数 serverBootstrap.option(ChannelOption.SO_BACKLOG, 128) .childHandler(new ChannelInitializer\u0026lt;SocketChannel\u0026gt;() { @Override protected void initChannel(SocketChannel ch) throws Exception { /** * 向 Worker 线程的管道双链表中添加处理类 ServerHandler * 整个处理流向如下：HeadContext-channelRead读数据 --\u0026gt; ServerHandler-channelRead * 读取数据进行业务逻辑判断，最后将结果返回给客户端 --\u0026gt; TailContext-write-\u0026gt; * HeadContext-write */ ch.pipeline().addLast(new ServerHandler()); } }); // 同步绑定端口 ChannelFuture future = serverBootstrap.bind(8080).sync(); // 阻塞主线程直到 Socket 通道关闭 future.channel().closeFuture().sync(); } catch (Exception e) { } finally { workerGroup.shutdownGracefully(); bossGroup.shutdownGracefully(); } } 1 2 3 4 5 6 7 8 9 10 11 12 13 14 public class ServerHandler extends ChannelInboundHandlerAdapter { /** * 读取客户端发送的数据 */ @Override public void channelRead(ChannelHandlerContext ctx, Object msg) { if (msg instanceof ByteBuf) { // 把 二进制数据 转成字符串，默认编码 UTF-8 System.out.println(((ByteBuf) msg).toString(Charset.defaultCharset())); } ctx.channel().writeAndFlush(\u0026#34;msg has received!\u0026#34;); } } Netty 客户端的应用 Netty 除了可以编写高性能服务端，还有配套的非阻塞I/O客户端\n关于客户端和服务端的通信，涉及到多线程数据交互，并运用了 JDK 的锁和多线程\nJava 多线程交互的例子 模拟 1 条主线程循环写数据，另外 99 条子线程，每条子线程模拟睡眠 1s，再给主线程发送结果\n最终主线程阻塞获取 99 条子线程响应的结果数据\nFutureMain: 主线程, 拥有启动 main() 方法的实例和总体处理逻辑\nRequestFuture: 模拟客户端请求类, 主要用于构建请求对象, 核心在于它的同步等待和结果通知\nSubThread: 子线程, 用于模拟服务器处理, 根据 RequestFuture 构建响应结果\nResponse: 响应结果类\nNetty 客户端服务端的交互流程 ","date":"2025-02-07T00:00:00Z","image":"https://yangzhaoxing90.github.io/p/netty-%E6%BA%90%E7%A0%81%E5%89%96%E6%9E%90%E4%B8%8E%E5%BA%94%E7%94%A8/cover_hu14628912385329313796.png","permalink":"https://yangzhaoxing90.github.io/p/netty-%E6%BA%90%E7%A0%81%E5%89%96%E6%9E%90%E4%B8%8E%E5%BA%94%E7%94%A8/","title":"Netty 源码剖析与应用"},{"content":"获取 springboot 源码 idea 中创建 springboot 项目，引入 springboot 的 pom 依赖，然后 maven 下载源码\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 \u0026lt;parent\u0026gt; \u0026lt;groupId\u0026gt;org.springframework.boot\u0026lt;/groupId\u0026gt; \u0026lt;artifactId\u0026gt;spring-boot-starter-parent\u0026lt;/artifactId\u0026gt; \u0026lt;version\u0026gt;2.7.18\u0026lt;/version\u0026gt; \u0026lt;/parent\u0026gt; \u0026lt;dependencies\u0026gt; \u0026lt;dependency\u0026gt; \u0026lt;groupId\u0026gt;org.springframework.boot\u0026lt;/groupId\u0026gt; \u0026lt;artifactId\u0026gt;spring-boot-starter-web\u0026lt;/artifactId\u0026gt; \u0026lt;/dependency\u0026gt; \u0026lt;dependency\u0026gt; \u0026lt;groupId\u0026gt;org.springframework.boot\u0026lt;/groupId\u0026gt; \u0026lt;artifactId\u0026gt;spring-boot-autoconfigure-processor\u0026lt;/artifactId\u0026gt; \u0026lt;optional\u0026gt;true\u0026lt;/optional\u0026gt; \u0026lt;/dependency\u0026gt; \u0026lt;/dependencies\u0026gt; \u0026lt;build\u0026gt; \u0026lt;plugins\u0026gt; \u0026lt;plugin\u0026gt; \u0026lt;groupId\u0026gt;org.springframework.boot\u0026lt;/groupId\u0026gt; \u0026lt;artifactId\u0026gt;spring-boot-maven-plugin\u0026lt;/artifactId\u0026gt; \u0026lt;configuration\u0026gt; \u0026lt;excludes\u0026gt; \u0026lt;exclude\u0026gt; \u0026lt;groupId\u0026gt;org.springframework.boot\u0026lt;/groupId\u0026gt; \u0026lt;artifactId\u0026gt;spring-boot-autoconfigure-processor\u0026lt;/artifactId\u0026gt; \u0026lt;/exclude\u0026gt; \u0026lt;/excludes\u0026gt; \u0026lt;/configuration\u0026gt; \u0026lt;/plugin\u0026gt; \u0026lt;/plugins\u0026gt; \u0026lt;/build\u0026gt; 获取了 springboot 2.7.18 的源码\nspringboot 的核心运行逻辑 Spring Boot 最核心的功能就是自动装配，基于 \u0026ldquo;约定优于配置\u0026rdquo; 的原则\n使用 Spring Boot 的时候，只需要引入对应的 Starters ，Spring Boot 启动时就会自动加载相关的依赖，配置相应的初始化参数\n以最快捷、简单的形式对第三方软件进行集成\n入口类\n由 @SpringBootApplication 注解的类 main() 函数，Spring Boot 项目的入口函数 @SpringBootApplication\n包含了 @EnableAutoConfiguration 注解 exclude 排除指定配置类 excludeName 排除指定配置类名 scanBasePackages 指定扫描基础包，激活注解组件的初始化 scanBasePacakgeClasses 指定扫描的类，用于初始化 proxyBeanMethods 指定是否代理 @Bean 方法以强制执行 bean 的生命周期行为 包含了 @ComponentScan 包含了 @SpringBootConfiguration 组合了 @Configuration @AliasFor 注解\n用于桥接到其他注解，该注解的属性中指定了所桥接的注解类 可以减少用户使用多注解带来的麻烦 @EnableAutoConfiguration 注解\nSpring 无法自动配置 @Configuration 注解的类，该注解可以根据约定自动管理它 主要功能是启动 Spring 应用程序上下文的时候进行自动配置 ENABLED_OVERRIDE_PROPERTY 用来开启/关闭自动配置 exclude 排除指定配置类 excludeName 排除指定配置类名 @EnableAutoConfiguration 注解的类所在的包，会作为 @Entity 被扫描的根路径，所以需要放到最外面 AutoConfigurationlmportSelector 类 @Import 注解\n主要提供导入配置类的功能 和 xml 中的 作用一样，可以通过 @Import 引入 @Configuration 注解的类 也可以导入实现 ImportSelector 或 ImportBeanDefinitionRegistrar 的类 还可以通过 @Import 导入 POJO ImportSelector 接口\nImportSelector 决定可以引入哪些 @Configuration String[] selectImports(AnnotationMetadata importingClassMetadata) AnnotationMetadata 内包含了被 @Import 注解的类的注解信息 实现 ImportSelector 的同时又实现了 Aware 接口, Spring 保证会在调用 ImportSelector 之前会先调用 四个 Aware 方法 AutoConfigurationImportSelector 类\n实现了 4 个 Aware 接口 实现了 DeferredImportSelector 接口，与 ImportSelector 的区别是前者会在所有 @Configuration 加载完之后再加载返回的配置类 ImportSelector 会在之前去加载返回的配置类 DefferedImportSelector 提供了 getImportGroup 实现自定义的 Configuration 加载顺序，也可通过 @Order 注解或 Ordered 接口来指定加载顺序 @Conditional 条件注解\n可以根据是否满足指定的条件决定是否进行 Bean 的实例化及装配 Condition 数组，的 matches 方法全部返回 true，该注解的类才会被加载 Spring Boot 构造流程源码分析 Spring 启动时都做了些什么，从 main() 开始\nSpringApplication\nrun 方法 实例化流程 定制化配置 ApplicationContextInitializer 加载\nSpringIOC 容器提供的接口，允许用于在 ConfigurableApplicationContext 类型的 ApplicationContext 做 refresh 之前进行设置 ApplicationListener 加载\n容器初始化完成后，需要处理一些数据的加载、初始化缓存、特定任务的注册等操作 Spring Boot 运行流程源码分析 SpringApplicationRunListeners ApplicationArguments ConfigurableEnvironment SpringApplicationRunListeners 监听器\n提供了针对 Listener 的各种遍历操作 它是 run 方法的监听器 EventPublishingRunListener\n使用内建的 SimpleApplicationEventMulticaster 来广播在上下文刷新之前触发的事件 初始化完成后，会遍历 SpringApplication 的所有 ApplicationListener 实例，将它们与 SimpleApplicationEventMulticaster 进行关联 ApplicationArguments\nDefaultApplicationArguments(args) ConfigurableEnvironment\n提供当前运行环境的公开接口，如配置文件 profiles 的各类系统属性和变量的设置、添加、读取、合并等功能 ","date":"2025-02-06T00:00:00Z","image":"https://yangzhaoxing90.github.io/p/springboot-%E6%8A%80%E6%9C%AF%E6%9E%B6%E6%9E%84%E5%86%85%E5%B9%95/cover_hu16075223468926870913.png","permalink":"https://yangzhaoxing90.github.io/p/springboot-%E6%8A%80%E6%9C%AF%E6%9E%B6%E6%9E%84%E5%86%85%E5%B9%95/","title":"Springboot 技术架构内幕"},{"content":"参考旅游计划制定基础的内容进行云南旅游制定\n旅游的目的 （重点） 体验不同地方的人文，看看不太常见的风景，放松身心，吃当地特色美食\n旅游时间 2026.02.11 (南小年) - 2026.02.15 (除夕前)\n总计5日4晚\n根据携程思考旅游计划 最为轻松的方式，直接用携程推荐的旅游方案：\n私家团方案 跟团游方案 包车自由行方案 根据飞猪思考旅游计划 感觉飞猪的方案不如携程多，直接 pass\n根据去哪儿思考旅游计划 感觉也不如携程，以后都用携程好了，这些就参考参考价格还有攻略啥的\n携程上的方案罗列 考虑到可能要带 1 岁的娃出门，所以考虑去海拔比较低的地方 昆明、大理、丽江古城、泸沽湖、西双版纳、普洱\n查询到携程上的云南旅游方案\n方案 类型 价格 路径 云南西双版纳5日4晚私家团 私家团 12788 丽江+大理市+玉龙雪山+洱海5日4晚自由行 自由行 8843.5 云南西双版纳+普洱5日4晚私家团 私家团 11476 昆明+大理市+丽江+香格里拉+玉龙雪山5日4晚私家团 私家团 13287 昆明+大理市+丽江5日4晚自由行 自由行 6887 感觉携程上的旅游方案价格较贵，所以最终决定一个行程参考，但是自己制定路线的方式\n行程计划表制定 ","date":"2025-02-06T00:00:00Z","image":"https://yangzhaoxing90.github.io/p/%E4%BA%91%E5%8D%97%E6%97%85%E6%B8%B8%E8%AE%A1%E5%88%92/cover_hu7165935331824467978.jpeg","permalink":"https://yangzhaoxing90.github.io/p/%E4%BA%91%E5%8D%97%E6%97%85%E6%B8%B8%E8%AE%A1%E5%88%92/","title":"云南旅游计划"},{"content":"遛娃推荐文章 19楼帖子\n遛娃记录 日期 地点 行程 感想 2025-01-05 xxx 自驾到 xxx, 途径 xxx, xxx, 然后返程, 耗时 xxx xxx 很不错, xxx 差点意思 \u0026hellip; ![图片] ","date":"2025-02-06T00:00:00Z","image":"https://yangzhaoxing90.github.io/p/%E6%9D%AD%E5%B7%9E%E9%81%9B%E5%A8%83%E8%AE%B0%E5%BD%95/cover_hu13091905212183973098.jpg","permalink":"https://yangzhaoxing90.github.io/p/%E6%9D%AD%E5%B7%9E%E9%81%9B%E5%A8%83%E8%AE%B0%E5%BD%95/","title":"杭州遛娃记录"},{"content":"","date":"2025-02-05T00:00:00Z","image":"https://yangzhaoxing90.github.io/p/linear-algebra/cover_hu7061021367063827890.png","permalink":"https://yangzhaoxing90.github.io/p/linear-algebra/","title":"linear algebra"},{"content":"引言 https://github.com/MingchaoZhu/DeepLearning?tab=readme-ov-file\nAI 深度学习： 层次化的概念形成的图的方法\n知识库：用形式化的语言对关于世界的知识进行硬编码\n机器学习：从原始数据中，自己提取模式的能力\n表示学习：使用机器学习来发掘表示本身\n深度学习的历史趋势 控制论 (简单的线性模型)\n$$ f(x, w) = x_1w_1 + ... + x_nw_n $$线性代数 标量: 就是一个单独的数\n向量: 是一列数\n$$ x = \\begin{bmatrix} x_1 \\\\ x_2 \\\\ . \\\\ . \\\\ . \\\\ x_n \\end{bmatrix} $$矩阵: 是一个二维数组\n$$ \\begin{bmatrix} A_{1,1} \u0026 A_{1,2} \\\\ A_{2,1} \u0026 A_{2,2} \\end{bmatrix} $$张量: 超过两维的数据 $A_{i,j,k}$\n转置: 对角线为轴的镜像\n$$ (A^T)_{i,j} = A_{j,i} $$矩阵乘法\n$ C = AB $\n$$ C_{i,j} = \\sum_{ \\begin{subarray}{l} k \\end{subarray}}A_{i,k}B_{k,j} $$矩阵点积\n$$ x^Ty $$线性方程组\n$$ Ax = b $$","date":"2025-02-05T00:00:00Z","image":"https://yangzhaoxing90.github.io/p/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/cover_hu8320576161981173177.jpg","permalink":"https://yangzhaoxing90.github.io/p/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/","title":"深度学习"},{"content":"QFluent 资源站 github: https://github.com/zhiyiYo/PyQt-Fluent-Widgets\n官网: https://qfluentwidgets.com/zh/pages/install\n安装 1 2 3 4 5 # 安装轻量版 pip install PySide6-Fluent-Widgets -i https://pypi.org/simple/ # 安装完整版 pip install \u0026#34;PySide6-Fluent-Widgets[full]\u0026#34; -i https://pypi.org/simple/ 下载源代码 1 git clone https://github.com/zhiyiYo/PyQt-Fluent-Widgets.git 运行示例 1 2 cd examples/gallery python demo.py 如何入门 掌握 Qt 的信号槽机制、事件机制、按钮和输入框等常用组件的使用 安装组件库并下载 GitHub 仓库 源代码 阅读并运行 examples 文件夹中的实例 阅读官网文档 除了 InfoBar、Pivot 和 FluentWindow 等自定义组件需要阅读文档外，按钮、输入框和标签这种组件仅仅是修改了样式表或重写了 paintEvent，API 与 Qt 内置组件保持一致，只要修改类名为 QFluentWidgets 的组件名即可，没有任何额外的学习成本\n","date":"2025-01-21T16:00:00Z","image":"https://yangzhaoxing90.github.io/p/qfluentwidgets-%E6%95%99%E7%A8%8B/fluent_hu1460194419458193413.png","permalink":"https://yangzhaoxing90.github.io/p/qfluentwidgets-%E6%95%99%E7%A8%8B/","title":"QFluentWidgets 教程"},{"content":"Getting started with PySide6 reference: https://www.pythonguis.com/tutorials/pyside6-creating-your-first-window/\nCreating your first app with PySide6 Creating an application\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 from PySide6.QtWidgets import QApplication, QWidget # Only needed for access to command line arguments import sys # You need one (and only one) QApplication instance per application. # Pass in sys.argv to allow command line arguments for your app. # If you know you won\u0026#39;t use command line arguments QApplication([]) works too. app = QApplication(sys.argv) # Create a Qt widget, which will be our window. window = QWidget() window.show() # IMPORTANT!!!!! Windows are hidden by default. # Start the event loop. app.exec() What\u0026rsquo;s the event loop?\nQApplication object to function. This object holds the event loop of your application — the core loop which governs all user interaction with the GUI.\nEvent queue: whether a press of a key, click of a mouse, or mouse movement — generates an event which is placed on the event queue.\nEvent handler: The event handler deals with the event, then passes control back to the event loop to wait for more events\nEvent loop: There is only one running event loop per application. In the event loop, the queue is checked on each iteration and if a waiting event is found, the event and control is passed to the specific event handler for the event.\nQMainWindow\nThis is a pre-made widget which provides a lot of standard window features you'll make use of in your apps, including toolbars, menus, a statusbar, dockable widgets and more 1 2 3 4 5 6 7 8 9 10 import sys from PySide6.QtWidgets import QApplication, QMainWindow app = QApplication(sys.argv) window = QMainWindow() window.show() # Start the event loop. app.exec() add some content\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 import sys from PySide6.QtCore import QSize, Qt from PySide6.QtWidgets import QApplication, QMainWindow, QPushButton # Subclass QMainWindow to customize your application\u0026#39;s main window class MainWindow(QMainWindow): def __init__(self): super().__init__() self.setWindowTitle(\u0026#34;My App\u0026#34;) button = QPushButton(\u0026#34;Press Me!\u0026#34;) # Set the central widget of the Window. self.setCentralWidget(button) app = QApplication(sys.argv) window = MainWindow() window.show() app.exec() Sizing windows and widgets\n1 2 3 from PySide6.QtCore import QSize, Qt self.setFixedSize(QSize(400, 300)) PySide6 Signals, Slots \u0026amp; Events QPushButton Signals 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 import sys from PySide6.QtWidgets import QApplication, QMainWindow, QPushButton class MainWindow(QMainWindow): def __init__(self): super().__init__() self.setWindowTitle(\u0026#34;My App\u0026#34;) button = QPushButton(\u0026#34;Press Me!\u0026#34;) button.setCheckable(True) button.clicked.connect(self.the_button_was_clicked) # Set the central widget of the Window. self.setCentralWidget(button) def the_button_was_clicked(self): print(\u0026#34;Clicked!\u0026#34;) app = QApplication(sys.argv) window = MainWindow() window.show() app.exec() Receiving data 1 2 3 4 5 6 7 button = QPushButton(\u0026#34;Press Me!\u0026#34;) button.setCheckable(True) button.clicked.connect(self.the_button_was_clicked) button.clicked.connect(self.the_button_was_toggled) def the_button_was_toggled(self, checked): print(\u0026#34;Checked?\u0026#34;, checked) Storing data 1 2 3 4 5 6 7 8 9 button = QPushButton(\u0026#34;Press Me!\u0026#34;) button.setCheckable(True) button.clicked.connect(self.the_button_was_toggled) button.setChecked(self.button_is_checked) def the_button_was_toggled(self, checked): self.button_is_checked = checked print(self.button_is_checked) Changing the interface 1 2 3 4 5 6 7 8 self.button.clicked.connect(self.the_button_was_clicked) def the_button_was_clicked(self): self.button.setText(\u0026#34;You already clicked me.\u0026#34;) self.button.setEnabled(False) # Also change the window title. self.setWindowTitle(\u0026#34;My Oneshot App\u0026#34;) Events Event handler Event type method mouseMoveEvent() Mouse moved mousePressEvent() Mouse button pressed mouseReleaseEvent() Mouse button released mouseDoubleClickEvent() Double click detected 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 import sys from PySide6.QtWidgets import QApplication, QLabel, QMainWindow class MainWindow(QMainWindow): def __init__(self): super().__init__() self.label = QLabel(\u0026#34;Click in this window\u0026#34;) self.setCentralWidget(self.label) def mouseMoveEvent(self, e): self.label.setText(\u0026#34;mouseMoveEvent\u0026#34;) def mousePressEvent(self, e): self.label.setText(\u0026#34;mousePressEvent\u0026#34;) def mouseReleaseEvent(self, e): self.label.setText(\u0026#34;mouseReleaseEvent\u0026#34;) def mouseDoubleClickEvent(self, e): self.label.setText(\u0026#34;mouseDoubleClickEvent\u0026#34;) app = QApplication(sys.argv) window = MainWindow() window.show() app.exec() More Events Method Returns .button() Specific button that triggered this event .buttons() State of all mouse buttons (OR\u0026rsquo;ed flags) .globalPos() Application-global position as a QPoint .globalX() Application-global horizontal X position .globalY() Application-global vertical Y position .pos() Widget-relative position as a QPoint integer .posF() Widget-relative position as a QPointF float 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 import sys from PySide6.QtCore import Qt from PySide6.QtWidgets import QApplication, QLabel, QMainWindow class MainWindow(QMainWindow): def __init__(self): super().__init__() self.label = QLabel(\u0026#34;Click in this window\u0026#34;) self.setCentralWidget(self.label) def mousePressEvent(self, e): if e.button() == Qt.MouseButton.LeftButton: # handle the left-button press in here self.label.setText(\u0026#34;mousePressEvent LEFT\u0026#34;) elif e.button() == Qt.MouseButton.MiddleButton: # handle the middle-button press in here. self.label.setText(\u0026#34;mousePressEvent MIDDLE\u0026#34;) elif e.button() == Qt.MouseButton.RightButton: # handle the right-button press in here. self.label.setText(\u0026#34;mousePressEvent RIGHT\u0026#34;) def mouseReleaseEvent(self, e): if e.button() == Qt.MouseButton.LeftButton: self.label.setText(\u0026#34;mouseReleaseEvent LEFT\u0026#34;) elif e.button() == Qt.MouseButton.MiddleButton: self.label.setText(\u0026#34;mouseReleaseEvent MIDDLE\u0026#34;) elif e.button() == Qt.MouseButton.RightButton: self.label.setText(\u0026#34;mouseReleaseEvent RIGHT\u0026#34;) def mouseDoubleClickEvent(self, e): if e.button() == Qt.MouseButton.LeftButton: self.label.setText(\u0026#34;mouseDoubleClickEvent LEFT\u0026#34;) elif e.button() == Qt.MouseButton.MiddleButton: self.label.setText(\u0026#34;mouseDoubleClickEvent MIDDLE\u0026#34;) elif e.button() == Qt.MouseButton.RightButton: self.label.setText(\u0026#34;mouseDoubleClickEvent RIGHT\u0026#34;) app = QApplication(sys.argv) window = MainWindow() window.show() app.exec() Context menus Context menus are small context-sensitive menus that typically appear when right-clicking on a window.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 import sys from PySide6.QtGui import QAction from PySide6.QtWidgets import QApplication, QMainWindow, QMenu class MainWindow(QMainWindow): def __init__(self): super().__init__() def contextMenuEvent(self, e): context = QMenu(self) context.addAction(QAction(\u0026#34;test 1\u0026#34;, self)) context.addAction(QAction(\u0026#34;test 2\u0026#34;, self)) context.addAction(QAction(\u0026#34;test 3\u0026#34;, self)) context.exec(e.globalPos()) app = QApplication(sys.argv) window = MainWindow() window.show() app.exec() PySide6 Widgets PySide6 Layouts PySide6 Toolbars \u0026amp; Menus — QAction PySide6 Dialogs and Alerts Creating additional windows Creating applications with Qt Designer ","date":"2025-01-21T14:00:00Z","image":"https://yangzhaoxing90.github.io/p/pyside6-tutorial/pyside_hu14271967758081850635.png","permalink":"https://yangzhaoxing90.github.io/p/pyside6-tutorial/","title":"PySide6 Tutorial"},{"content":"新生儿护理材料总结 资料 护理相关内容 《西尔斯亲密育儿》 换尿布、脐带护理、指甲护理、洗澡、按摩、呼吸模式、排泄模式、体重、吐奶、喂奶、睡眠 《美国儿科学会育儿百科》 婴儿哭闹、婴儿睡姿、尿布、排尿、排便、洗澡、保养皮肤、剪指甲、穿衣服、基本医疗护理 ","date":"2024-01-14T11:00:00Z","image":"https://yangzhaoxing90.github.io/p/%E6%96%B0%E7%94%9F%E5%84%BF%E6%8A%A4%E7%90%86%E8%B5%84%E6%BA%90%E5%90%88%E9%9B%86/cover_hu14258836955209789646.jpg","permalink":"https://yangzhaoxing90.github.io/p/%E6%96%B0%E7%94%9F%E5%84%BF%E6%8A%A4%E7%90%86%E8%B5%84%E6%BA%90%E5%90%88%E9%9B%86/","title":"新生儿护理资源合集"},{"content":"网络基础知识 计算机网络出现的背景：\n计算机普及 计算机间信息共享的需求 (从局域网到广域网) 私有网络发展为互联网 协议是什么：\n例如： TCP/IP/HTTP \u0026hellip; 协议的必要性 (计算机通信时的约定，计算机间遵守相同的协议就能通信) 分组交换协议 (将通信的数据分割成一个个包作为较小的单位进行传输) 协议由谁规定:\n计算机通信的最初, 每家厂商都自己产出网络产品进行通信, 没有标准化 ISO 制定了 OSI 国际标准, 对通信系统进行了标准化 TCP/IP 标准化是由 IEFT 所推进的 协议分层：\n协议分层模型，每层都接受它下层提供的服务，并负责为它的上层提供服务 上下层的交互所遵循的约定叫接口，同层交互所遵循的约定叫协议 OSI 参考模型：\nOSI 将复杂的通信协议分成了易于理解的 7 层 OSI 参考模型和 OSI 协议不是一回事 OSI 各层的作用：\n应用层 (电子邮件协议、远程登录协议、文件传输协议， 是针对每个应用的协议) 表示层 (设备固有格式到网络标准格式的转换) 会话层 (通信管理，负责建立和断开通信连接) 传输层 (管理两个节点间的数据传输，负责可靠传输) 网络层 (地址管理、路由选择) 数据链路层 (数据帧和比特流转换) 物理层 (比特流和电子信号转换) 传输方式分类：\n面向有连接（发送数据前需要建立通信线路）和面向无连接 （发送端自由发送数据） 电路交换 (电话网，过时) 和分组交换 电路交换：\n通信线路是独占的，计算机之间的通信效率低 通过交换机建立通信电路 分组交换：\n将数据分成多个数据包，按照一定顺序排列之后分别发送 所有计算机可以一起收发数据，提高了通信线路的利用率 分组交换中由(分组交换机)路由器连接通信线路 传输方式根据接收端的数据分类：\n单播 (Unicast) (1对1通信) 广播 (Broadcast) (1对多通信) 任播 (Anycast) （组内任选一台） 地址:\n每层协议地址不同，TCP/IP 的 MAC 地址， IP地址，端口号等；应用层可以将电子邮件作为地址 地址的唯一性 （单播、广播、任播，如何实现地址唯一） 地址的层次性 （MAC地址、IP地址的分层） 地址的唯一性：\n单播的例子 （一年级一班的xxx同学请起立） 多播的例子 （一年级一班同学请起立） 任播的例子 （一年级一班的哪位同学请起立） 地址的层次性：\nIP 地址由网络号和主机号两部分组成 MAC 地址由制造商识别号、制造商内部产品编号和产品通用编号确保唯一性 网络的构成要素：\n网卡 使得计算机联网的设备 中继器 物理层上延长网络的设备 网桥/2层交换机 数据链路层上延长网络的设备 路由器/3层交换机 通过网络层转发数据分组 4~7 层交换机 处理传输层以上各层网络传输的设备 网关 转换协议的设备 传输速率和吞吐量：\n传输速率 （带宽）（相当于通车的车道，车道越多一次允许通过的车辆越多） 吞吐量就是实际传输速率, 还包含了 cpu 的处理能力、网络的拥堵程度、报文中数据字段的占用份额等 网卡：\n网络接口卡 (NIC), 也叫 网络适配器、网卡、LAN 卡 现今计算机都内置网卡，用于计算机连入网络 中继器：\n电信号或光信号经过中继器放大再传给另一个电缆 物理层设备 不能在传输速度不同的媒介中转发 网桥：\n数据链路层设备 能够识别数据帧，临时存于内存，然后生成新的数据帧，转发给相连的另一个网段 数据帧中的数据位 FCS 用于校验数据是否正确达到目的地 网桥还能通过地址自学机制和过滤功能控制网络流量 这里的地址是 MAC 地址、硬件地址、物理地址和适配器地址， NIC 分配的具体地址 路由器：\n网络层设备 对分组报文进行转发 路由器可以连接不同的数据链路 路由器还有可以分担网络负荷的作用 4～7 层交换机：\n传输层至应用层设备 分析收发数据，并对其进行特殊处理 （如负载均衡器） 带宽控制、广域网加速器、特殊应用访问加速、防火墙 网关：\n传输层到应用层的数据进行转换和转发的设备 如互联网邮箱和手机邮箱的转换 代理服务器，防火墙 网络的构成：\n边缘网络 （高速公路的出入口） 主干网络 （高速公路） TCP/IP 基础知识 计算机厂商跟风支持 TCP/IP 的历史原因：\n军用技术 （美国国防部），使用迂回线路替代中心线路，防止整个网络一点破坏和瘫痪 ARPANET 的诞生，分组交换技术的应用，巨大规模网络的鼻祖 TCP/IP 诞生， ARPANET 的唯一指定协议 Unix 系统的普及 商用互联网服务 TCP/IP 的标准化：\nIP、ICMP、TCP、UDP、TELNET、FTP 以及 HTTP 都属于 TCP/IP 族 开放性和实用性两大特点 IEFT 讨论制定 TCP/IP 的开放性 RFC文档记录了协议的内容，实现和运用，以及实验相关信息，通过编号组织每个协议的标准化请求 若是要修改协议内容，要发一个新的 RFC 文档，老的作废 STD 编号用来记载哪个编号制定哪个协议 TCP/IP 的标准化流程：\n一个协议的标准化一定要经过 IETF 讨论 互联网草案阶段，如果认为可以进行标准化 （6个月） 就记入 RFC 进入提议标准阶段 （IESG IETF 的主要成员的批准，就能被编入 RFC） 草案标准阶段 最后才是真正的标准阶段 RFC 的获取方法：\nhttp://www.rfc-editor.org/rfc/ http://www.rfc-editor.org/in-notes/std/ http://www.rfc-editor.org/in-notes/fyi http://www.rfc-editor.org/internet-drafts/ 互联网:\n由 ARPANET 网发展而来，互连全世界的计算机网络 互联网的每个网络都是骨干网和末端网组成，每个网络通过 NOC 相连，连接异构网络需要用 IX 的支持 TCP/IP 协议分层模型\nOSI 参考模型 TCP/IP 物理层\n负责传输数据的硬件 TCP/IP 网络接口层 (数据链路层)\n让 NIC 起作用的驱动程序 互联网层 （网络层）\nIP 协议 （主机的标识） ICMP 协议 （网络健康诊断） ARP 协议 （从IP中解析MAC地址的协议） TCP/IP 传输层\nTCP 协议 （面向有连接的传输协议） UDP 协议 （面向无连接的传输协议） TCP/IP 应用层\nWWW HTTP HTML SMTP FTP 远程登录 （TELENT 和 SSH） SNMP TCP/IP 通信示例\n数据包首部 （每个分层都会在数据包前附加一个首部） 应用程序发送数据包 -\u0026gt; 附加 TCP 首部 -\u0026gt; 附加 IP 首部 -\u0026gt; 附加以太网首部 -\u0026gt; 发送到目标主机 -\u0026gt; 解析以太网首部 -\u0026gt; 解析 IP 首部 -\u0026gt; 解析 TCP 首部 -\u0026gt; 获取信息 数据链路 TCP/IP 对数据链路及以下部分 (物理层) 未做定义\n数据链路层协议定义了通过通信媒介互连的设备之间传输的规范\n数据链路通信媒介\n双绞线电缆 同轴电缆 光纤 电波 红外线 各个设备间也会通过交换机、网桥、中继器等中转数据\nOSI 中数据链路层的相关技术\nMAC寻址 介质共享 非公有网络 分组交换 环路检测 VLAN 数据链路层传输方式\n以太网 WLAN PPP 数据链路可以视为网络传输中的最小单位\nMAC 地址 （用于识别数据链路中互连的节点）\n厂商识别码 (OUI) http://standards.ieee.org/develop/regauth/oui/pubic.html http://standards.ieee.org/develop/regauth/oui/index.html 共享介质型网络\n指由多个设备共享一个通信介质的一种网络 两种介质访问控制方式： 争用方式、令牌传递方式 争用方式，指争夺获取数据传输的权利 （CSMA），采用先到先得的方式占用信道发送数据 CSMA/CD 方式，发生冲突则立即释放信道，再重新争用 令牌传递方式， 只有获得令牌才能发送数据 非共享介质型网络\n对介质采用一种传输控制的方式 每个站直连交换机，由交换机负责转发数据帧 根据MAC地址转发\n交换集线器，以太网交换机 转发表 （根据MAC地址决定发送接口） 环路检测技术\n生成树的方式： IEEE802.1D定义，每个网桥必须在 1-10s 内相互交换 BPDU 包，从而判断哪些端口使用或不使用，以便消除环路 一旦发生故障，则自动切换通信线路，利用没有被使用的端口继续进行传输 源路由法 VLAN\n使用带有 VLAN 技术的网桥，就可以不用修改实际的布线，只需要修改网络的结构就行了 VLAN 就是根据交换机不同的端口，区分成不同的网段 以太网\nIEEE 802.3 规范的以太网被称为 802.3 以太网 以太网普及之初，使用同一根同轴电缆的共享介质的连接方式 现在一般采用终端与交换机之间，独占电缆的方式 以太网的分类\n10BASE，100BASE，指的是传输速率 以太网帧格式\n前段叫前导码，表示一个以太帧的开始，8个字节 前导码末尾是 SFD 域，它的值是 11 前导码后面是帧的本体，本体的前端是首部，14个字节，6个字节的目标MAC地址，6个字节的源MAC地址，2个字节的上层协议类型 帧尾是 FCS 4个字节 主要的协议类型 关于协议类型更多的细节 http://standards.ieee.org/regauth/ethertype/eth.txt http://www.iana.org/assignments/ethernet-numbers VLAN 会追加 4 个字节 (类型[16bit]、优先度[3bit]、CFI[1bit]、VLAN ID[12bit]) 无线通信\n通常采用电磁波、红外线、激光等方式进行传播 IEEE802.11定义了无线LAN IEEE802.11b 和 IEEE802.11g (2.4GHz) IEEE802.11a (5GHz) IEEE802.11n, MINO 技术 PPP\n点对点 PPP 只属于链路层的协议，不包含物理层 可以使用电话线、ISDN、专线、ATM线路、ADSL、有线电视通过 PPPoE LCP 和 NCP\nPPP 主要功能包含两个协议，不依赖上层的 LCP 和依赖上层的 NCP 若上层为 IP，NCP 也称作 IPCP LCP 主要负责建立和断开连接、设置最大接收单元、设置验证协议以及设置是否进行通信质量的监控 IPCP 则负责 IP 地址设置和是否进行 TCP/IP 首部压缩等设备 PAP 和 CHAP 通信双向验证协议 CHAP 和 OTP PPP 的帧格式\n8位字节标志码 (01111110) PPPoE\nATM\n面向连接的数据链路 以信元 (5字节首部+48字节数据) 作为单位进行传输的 POS\n一种在 SDH 上进行通信的一种协议 FDDI\n分布式光线数据接口 采用令牌环的访问方式 DAS 和 SAS 的概念 Token Ring\n令牌环网源自 IBM 开发的令牌环 LAN 技术 100VG-AnyLAN\nIEEE802.12 规范定义的一种网络协议 VG 是 Voice Grade 的缩写，指语音级 光纤通道\n实现高速数据通信的一种数据链路 HIPPI\n用于连接大型计算机 IEEE1394\n家庭局域网，也叫 FireWire, i.Link HDMI\n高清晰多媒体接口 iSCSI\n个人电脑连接硬盘的 SCSI 标准应用于 TCP/IP 网络上的一种标准 InfiniBand\n针对高端服务器的一种超高速传输接口技术 DOCSIS\n有线电视传输行业的标准 高速 PLC\n公共网络\n模拟电话线路 移动通信服务 ADSL (模拟电话) FTTH (光纤到户) 有线电视 专线 VPN (IP-VPN, 广域以太网) 公共无线 LAN X.25 帧中继 ISDN IP 协议 跨越多种数据链路，需要借助网络层\nIP 基础知识\nIP寻址 路由 IP分包与组包 IP 地址\n网络层地址信息 TCP/IP 通信中所有主机或路由器都必须设定自己的 IP 地址 不论一台主机与哪种数据链路连接，IP地址的形式都不会变 路由控制\n指的是将分组数据发送到最终目标地址的功能 路由控制表 (记录了IP数据应该发送给哪个路由器) IP 分片\nIP包比较大而不同数据链路层 MTU 不同，传输的包的大小不同 因此需要进行IP数据包的分片 IP 面向无连接\n发包之前，不需要建立与目标 IP 的连接 无连接的优点：简化、提速 IP 地址基础知识\nIPv4 地址用 32 位正整数来表示 由网络和主机两部分组成 IP 地址的分类\nA类 (0开头+7位是网络标识, 剩余24位是主机标识) B类 (10开头+14位是网络标识, 剩余16位是主机标识) C类 (110开头+21位是网络标识, 剩余8位是主机标识) D类 (1110开头+28位是网络标识, 没有主机标识) 广播地址\n","date":"2024-01-10T14:00:00Z","image":"https://yangzhaoxing90.github.io/p/%E5%9B%BE%E8%A7%A3-tcp/ip/splash_hu9907572104892523533.jpg","permalink":"https://yangzhaoxing90.github.io/p/%E5%9B%BE%E8%A7%A3-tcp/ip/","title":"图解 TCP/IP"},{"content":"第 1 章 什么是亲密育儿法 养育你自己的孩子 对读者对要求: 边学边用、适合的才是最好的、开放包容的心态来对待观点\n对作者自己的要求: 确保书中的观点是经过论证和检验的，不是一家之言\n亲密育儿七法 3个至关重要的目标:\n了解你的宝宝 让宝宝感到舒适 享受抚育宝宝的过程 让分娩成为一种情感纽带——及早与宝宝建立亲密关系 学习分娩相关知识，讨论分娩的观念 增加与宝宝的陪伴 宝宝哭声中的学问——分辨和回应宝宝发出的信号 回应宝宝的反应 婴儿不会有坏习惯，都是交流的方式 宝宝出生的前几个月及时满足他的所有需求，意味着你们之间形成了良好的交流模式 用母乳哺育你的宝宝 吃母乳长大的孩子更聪明 母乳喂养对妈妈自己也有好处，会帮助你形成母亲的直觉 把“宝宝”贴在身上——尽量多抱宝宝 婴儿背巾 和宝宝一起睡 不管宝宝睡在哪里，只要你和宝宝睡得好就行 睡眠共享 （和宝宝一起睡） 把握平衡和界限 给宝宝所有他需要的，而不是所有他想要的 不要忽略自己的需求 学会分辨关于育儿的建议 最重要的一点是学会与宝宝沟通 请爸爸们也加入亲密育儿的阵营 你可能会遇到的一些问题 亲密育儿法长期来看是最轻松的育儿法 溺爱理论是错误的，亲密无间的关系并不会影响宝宝的独立性 亲密育儿法反而能促进宝宝的独立 等宝宝长大点，再渐渐延长回应时间 亲密育儿法等好处：\n可以改善宝宝的行为 可以促进宝宝的发育 有助于宝宝的智力开发 敏感度的培养 第 2 章 安全顺产的 10 个要点 选择好的分娩环境 选择正确的接生人员 雇用专业的分娩助理 多活动 别用仰卧的姿势分娩 尝试各种分娩姿势 合理利用科学技术 慎用麻醉剂 避免做会阴侧切 做好分娩计划 第 3 章 为迎接宝宝做准备 选好你的育儿团队 选择母乳喂养还是奶瓶喂养 为宝宝搭建爱巢 第 4 章 与宝宝一起迈好第一步 宝宝的最初时刻 亲密关系 —— 什么意思， 如何建立 了解刚出生的宝宝 促进亲密关系的行为 生日 “照片” 医院的例行程序 新生儿黄疸 宝宝的第一次身体检查 第 5 章 产后全家的调适 回巢安顿 角色调整 预防和克服产后抑郁症 现在我们是三个人了 产后的身体恢复 第 6 章 照顾宝宝的身体 换尿布 把换尿布的时间变成高品质亲子时间：\n从宝宝出生到如厕练习这段时间要换 5000 块左右的尿布 喂的越频繁，换的越频繁 把换尿布的时间看作跟宝宝的交流时间 选择尿布：\n100%纯棉的尿布，外出时可以考虑用纸尿裤 换尿布：\n换尿布应该在温暖的房间、安全的平台上进行，开始前确保所有装备都在触手可及的范围内 干净的尿布 擦洗的东西，绵柔巾 垫在宝宝身下的席子或毛巾 (浴巾、隔尿垫) 对付尿布疹的药膏 （抚触油全身，如果尿布疹不退，就用含氧化锌成分的药膏） 换洗衣物 尿布围裤 尿布别针、尿布扣 安全换尿布的技巧：\n不要两只手都放开宝宝 安全处理尿布别针 （没有尿布别针，学一下怎么换尿布） 建议对换尿布不熟练的人，换的时候放地板上，安全点 勤换尿布 注意，宝宝脱的光溜溜的时候喜欢小便，手边要准备好额外的尿布或毛巾 对婴儿湿巾的提醒：有些宝宝敏感的皮肤忍受不了它们，要用无味的湿巾，使用前在温水里漂洗 当宝宝过了拉一次吃一次的阶段（第一个月末尾），喂奶前换尿布，这样宝宝吃饱后就能直接入睡，而不会被尿布打扰 给爱动的宝宝换尿布：\n为换尿布准备一个特别的节目 （唱歌等） 叼一个玩具在你嘴里，用来安抚动个不停的宝宝 放一个会动的玩具在你换尿布的地方，转移宝宝的注意力 换的时候，一边唱歌，一边用你的手指上下抚摸宝宝的腿和肚子 叫他找找他的肚脐、眼睛、鼻子等等 做个特别的、有趣的面部表情，吸引宝宝的兴趣，让他注意你的脸而不是换尿布这件事 如果宝宝动的受不了，就放地上换 脐带护理 24小时后摘掉脐带上的塑料夹子 脐带头几天会肿胀，像果冻干一样，几天后开始变干、萎缩，通常 2～3 周内彻底脱落 为了不刺激脐带，不要在肚脐周围盖上尿布或纸尿裤 用海绵给脐带擦洗 脐带脱落看到血是正常的 如果有特殊难闻的味道，就可能是感染的征兆，应该告诉医生 如果脐带周围直径 3 厘米左右的区域有红又热，肿胀，过敏，说明已经感染 指甲护理 在宝宝熟睡的时候剪他的指甲 宝宝熟睡的时候，四肢摊开，很放松，手指都是张开的 婴儿专用指甲钳比剪刀或成人用的更安全 为了不剪到指尖的皮肤，剪的时候要把宝宝的指肚压低 流点血是很难避免的，万一发生这种情况，按一按小伤口，敷点抗生素药膏 如果不剪指甲，就戴上纯棉手套，防止他抓伤自己 给宝宝洗澡 建议是先用海绵擦洗，直到脐带彻底干燥、脱落为止\n用海绵洗\n选择一个洗澡的地方，要靠近厨房或浴室，保持温暖并通风 备好必要物品 先用温水洗宝宝的脸，尤其是耳朵后面的地方、两个耳郭里面，以及脖子褶皱的地方 要是宝宝皮肤出汗、出油或者脏了，就用一块性质温和的香皂，但不要用脸上 用橄榄球式的 备好必要的物品\n两条毛巾 一块温和的香皂和婴儿洗发香波 棉球 连帽毛巾 尿布 干净衣服 在浴盆里面洗澡\n确保水温合适 唱歌，眼神交流 洗澡有关的问题\n该多长时间给宝宝洗一次澡 (一周洗一两次) 给宝宝用什么样的香皂和洗发香波 （温和型） 应该给宝宝用润肤油和爽身粉 （保湿霜） 宝宝每次洗澡时都要尖叫，怎样才能让他喜欢上洗澡 （） 让宝宝舒服 安抚奶嘴：用还是不用 恰当的接触：婴儿按摩的艺术 第 7 章 最初几周的一般护理 新生儿早期的变化 吐奶 眼睛 嘴巴 新生儿的胎记和皮疹 尿布疹的预防和治疗 第 8 章 实行母乳喂养的原因和方法 为什么母乳是最好的 为母乳喂养做准备 踏出正确的第一步 乳汁是怎么产生的 母乳喂养的常见问题 第 9 章 哺乳妈妈的选择和挑战 在哺乳期要吃好 乳汁中的敏感成分 哺乳期安全服药 哺乳好帮手 工作、喂奶两不误 挤奶 母乳喂养的挑战和快乐 特殊的孩子特别地养 断奶 第 10 章 安全而充满爱意地喂奶粉 奶粉的真相 喂多少，喂几次 冲泡配方奶 用奶瓶喂奶的技巧 让孩子脱离奶瓶 是人而不是奶瓶在喂奶 第 11 章 引入固体食物： 何时吃，吃什么，怎么吃 为什么要等 喂固体食物：6～9 个月 喂食策略 喂固体食物：9～12 个月 自制婴儿食品 市售婴儿食品 拿出杯子来 第 12 章 10招让你成为家庭营养师 给宝宝吃聪明的脂肪 给宝宝最好的碳水化合物 激活蛋白质 奠定孩子的口味 保证足够的膳食纤维 重视维生素 注意矿物质 增加铁元素 算好每一卡 养好瘦小孩 第 13 章 给学步期幼儿喂食 给挑食的宝宝喂食 让宝宝乖乖去吃饭 给学步期幼儿选择正确的乳品 你的孩子吃够了吗 食物过敏 如何让农药远离宝宝 第 14 章 把宝宝“贴”在身上：抱孩子的艺术与科学 老思想的新证据 选择合适的背景 怎样把宝宝“贴”上身；个人课程 爸爸该如何把宝宝“贴”上身——做个参与者 背宝宝的其他人选 背宝宝入睡 背宝宝做事 特殊情况 对宝宝和父母双方的好处 更好的改变你的生活方式 第 15 章 夜间育儿：如何使宝宝乖乖安睡 婴儿睡眠的事实 第 1 步：让你的宝宝有最好的开始 第 2 步：创造条件，让宝宝入睡 第 3 步：减少容易夜间醒来的因素 和宝宝一起睡——行还是不行 处理疑虑和批评 睡眠安全 疑难解答：解决宝宝的睡眠问题 关于睡眠的一些常见问题 第 16 章 照料难缠或肠痉挛的宝宝 难缠的宝宝 宝宝为什么哭闹 父母与宝宝配合 安抚宝宝 肠痉挛宝宝，或疼痛的宝宝 追踪肠痉挛的潜在成因 安抚肠痉挛宝宝 肠痉挛可以预防吗 第 17 章 工作与育儿 真正的重点：亲密关系 兼顾工作和育儿的关键 选择照顾宝宝的人 选择商业性的日托儿所 第 18 章 特殊情形的处理 照顾收养的孩子 双胞胎 单亲家庭 照顾唐氏综合征宝宝——特殊育儿方式 宝宝和宠物 第 19 章 共同成长：享受宝宝成长的各个阶段 共同成长 亲密育儿法：如何建立更好的亲子关系 宝宝的成长 婴儿成长的 5 个方面 养育聪明宝宝的 7 个方法 第 20 章 0～6个月：大变化 第 1 个月：需求多多 新生儿的反射动作 第 2 个月：笑容多多 第 3 个月：可爱的小手 对最初 3 个月的回顾 第 4 个月：视力更好 4～6个月的语言发展 第 5 个月：善于触摸 第 6 个月：学会好好坐 第 21 章 6～12个月：迅速发展 6～9 个月：探索大发现 新的恐惧和担心 9～12个月：大动作 照顾宝宝的脚 第 22 章 第2年：从婴儿到幼儿 12～15个月：迈出大步 15～18个月：说话 丰富幼儿的语言 孩子走路是不是怪怪的 18～24个月：思考能力 第 23 章 恼人但正常的幼儿行为 教育真正的含义 倔强的固定思维 为玩具而争吵 发脾气 咬和打 宝宝不听话 尖叫和哭哭啼啼 第 24 章 训练宝宝大小便 你应该知道的一些事情 晚训练比早训练好 逐步训练 不接受训练的孩子 大小便速成训练法：周末训练营 第 25 章 给宝宝安全的居家环境 容易发生意外的宝宝的特征 选用安全的婴儿用具 安全上路，旅途愉快 带宝宝骑自行车 你家的植物安全吗 环境污染：当心铅中毒 第 26 章 让宝宝健康不生病 保持健康从家开始 健康检查 接种疫苗 照顾小孩病 吃药 减少婴儿猝死综合征的出现 第 27 章 常见医学问题的家庭护理 发烧 感冒 咳嗽 耳部感染 鼻窦感染 哮吼 腹泻 呕吐 便秘 追踪和治疗吸入性过敏 湿疹 父母关于艾滋病的疑问 第 28 章常见紧急情况的急救和处理方法 提前准备，有备无患 异物窒息 如果孩子没有呼吸了：心肺复苏的步骤 流血 头部受伤 痉挛 烫伤 中毒 眼部受伤 鼻子受伤 昆虫叮咬 牙齿受伤 拉伤、扭伤和骨折 ","date":"2024-01-07T15:30:00Z","image":"https://yangzhaoxing90.github.io/p/%E8%A5%BF%E5%B0%94%E6%96%AF%E4%BA%B2%E5%AF%86%E8%82%B2%E5%84%BF/cover_hu6307248181568134095.jpg","permalink":"https://yangzhaoxing90.github.io/p/%E8%A5%BF%E5%B0%94%E6%96%AF%E4%BA%B2%E5%AF%86%E8%82%B2%E5%84%BF/","title":"西尔斯亲密育儿"},{"content":"Welcome to Hugo theme Stack. This is your first post. Edit or delete it, then start writing!\nFor more information about this theme, check the documentation: https://stack.jimmycai.com/\nWant a site like this? Check out hugo-theme-stack-stater\nPhoto by Pawel Czerwinski on Unsplash\n","date":"2022-03-06T00:00:00Z","image":"https://yangzhaoxing90.github.io/p/hello-world/cover_hu6307248181568134095.jpg","permalink":"https://yangzhaoxing90.github.io/p/hello-world/","title":"Hello World"},{"content":"Hugo theme Stack supports the creation of interactive image galleries using Markdown. It\u0026rsquo;s powered by PhotoSwipe and its syntax was inspired by Typlog.\nTo use this feature, the image must be in the same directory as the Markdown file, as it uses Hugo\u0026rsquo;s page bundle feature to read the dimensions of the image. External images are not supported.\nSyntax 1 ![Image 1](1.jpg) ![Image 2](2.jpg) Result Photo by mymind and Luke Chesser on Unsplash\n","date":"2023-08-26T00:00:00Z","image":"https://yangzhaoxing90.github.io/p/image-gallery/2_hu15576070775610481867.jpg","permalink":"https://yangzhaoxing90.github.io/p/image-gallery/","title":"Image gallery"},{"content":"This article offers a sample of basic Markdown syntax that can be used in Hugo content files, also it shows whether basic HTML elements are decorated with CSS in a Hugo theme.\nHeadings The following HTML \u0026lt;h1\u0026gt;—\u0026lt;h6\u0026gt; elements represent six levels of section headings. \u0026lt;h1\u0026gt; is the highest section level while \u0026lt;h6\u0026gt; is the lowest.\nH1 H2 H3 H4 H5 H6 Paragraph Xerum, quo qui aut unt expliquam qui dolut labo. Aque venitatiusda cum, voluptionse latur sitiae dolessi aut parist aut dollo enim qui voluptate ma dolestendit peritin re plis aut quas inctum laceat est volestemque commosa as cus endigna tectur, offic to cor sequas etum rerum idem sintibus eiur? Quianimin porecus evelectur, cum que nis nust voloribus ratem aut omnimi, sitatur? Quiatem. Nam, omnis sum am facea corem alique molestrunt et eos evelece arcillit ut aut eos eos nus, sin conecerem erum fuga. Ri oditatquam, ad quibus unda veliamenimin cusam et facea ipsamus es exerum sitate dolores editium rerore eost, temped molorro ratiae volorro te reribus dolorer sperchicium faceata tiustia prat.\nItatur? Quiatae cullecum rem ent aut odis in re eossequodi nonsequ idebis ne sapicia is sinveli squiatum, core et que aut hariosam ex eat.\nBlockquotes The blockquote element represents content that is quoted from another source, optionally with a citation which must be within a footer or cite element, and optionally with in-line changes such as annotations and abbreviations.\nBlockquote without attribution Tiam, ad mint andaepu dandae nostion secatur sequo quae. Note that you can use Markdown syntax within a blockquote.\nBlockquote with attribution Don\u0026rsquo;t communicate by sharing memory, share memory by communicating.\n— Rob Pike1\nTables Tables aren\u0026rsquo;t part of the core Markdown spec, but Hugo supports supports them out-of-the-box.\nName Age Bob 27 Alice 23 Inline Markdown within tables Italics Bold Code italics bold code A B C D E F Lorem ipsum dolor sit amet, consectetur adipiscing elit. Phasellus ultricies, sapien non euismod aliquam, dui ligula tincidunt odio, at accumsan nulla sapien eget ex. Proin eleifend dictum ipsum, non euismod ipsum pulvinar et. Vivamus sollicitudin, quam in pulvinar aliquam, metus elit pretium purus Proin sit amet velit nec enim imperdiet vehicula. Ut bibendum vestibulum quam, eu egestas turpis gravida nec Sed scelerisque nec turpis vel viverra. Vivamus vitae pretium sapien Code Blocks Code block with backticks 1 2 3 4 5 6 7 8 9 10 \u0026lt;!doctype html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;utf-8\u0026#34;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Code block indented with four spaces \u0026lt;!doctype html\u0026gt; \u0026lt;html lang=\u0026quot;en\u0026quot;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026quot;utf-8\u0026quot;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Diff code block 1 2 3 4 5 [dependencies.bevy] git = \u0026#34;https://github.com/bevyengine/bevy\u0026#34; rev = \u0026#34;11f52b8c72fc3a568e8bb4a4cd1f3eb025ac2e13\u0026#34; - features = [\u0026#34;dynamic\u0026#34;] + features = [\u0026#34;jpeg\u0026#34;, \u0026#34;dynamic\u0026#34;] One line code block 1 \u0026lt;p\u0026gt;A paragraph\u0026lt;/p\u0026gt; List Types Ordered List First item Second item Third item Unordered List List item Another item And another item Nested list Fruit Apple Orange Banana Dairy Milk Cheese Other Elements — abbr, sub, sup, kbd, mark GIF is a bitmap image format.\nH2O\nXn + Yn = Zn\nPress CTRL + ALT + Delete to end the session.\nMost salamanders are nocturnal, and hunt for insects, worms, and other small creatures.\nThe above quote is excerpted from Rob Pike\u0026rsquo;s talk during Gopherfest, November 18, 2015.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","date":"2023-09-07T00:00:00Z","permalink":"https://yangzhaoxing90.github.io/p/markdown-syntax-guide/","title":"Markdown Syntax Guide"},{"content":"Stack has built-in support for math typesetting using KaTeX.\nIt\u0026rsquo;s not enabled by default side-wide, but you can enable it for individual posts by adding math: true to the front matter. Or you can enable it side-wide by adding math = true to the params.article section in config.toml.\nInline math This is an inline mathematical expression: $\\varphi = \\dfrac{1+\\sqrt5}{2}= 1.6180339887…$\n1 $\\varphi = \\dfrac{1+\\sqrt5}{2}= 1.6180339887…$ Block math $$ \\varphi = 1+\\frac{1} {1+\\frac{1} {1+\\frac{1} {1+\\cdots} } } $$ 1 2 3 $$ \\varphi = 1+\\frac{1} {1+\\frac{1} {1+\\frac{1} {1+\\cdots} } } $$ $$ f(x) = \\int_{-\\infty}^\\infty\\hat f(\\xi)\\,e^{2 \\pi i \\xi x}\\,d\\xi $$ 1 2 3 $$ f(x) = \\int_{-\\infty}^\\infty\\hat f(\\xi)\\,e^{2 \\pi i \\xi x}\\,d\\xi $$ ","date":"2023-08-24T00:00:00Z","permalink":"https://yangzhaoxing90.github.io/p/math-typesetting/","title":"Math Typesetting"},{"content":"For more details, check out the documentation.\nBilibili video Tencent video YouTube video Generic video file Your browser doesn't support HTML5 video. Here is a link to the video instead. Gist GitLab Quote Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\n― A famous person, The book they wrote Photo by Codioful on Unsplash\n","date":"2023-08-25T00:00:00Z","image":"https://yangzhaoxing90.github.io/p/shortcodes/cover_hu17063188895770243625.jpg","permalink":"https://yangzhaoxing90.github.io/p/shortcodes/","title":"Shortcodes"}]