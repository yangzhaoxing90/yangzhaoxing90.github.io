---
title: 操作系统概念-Java实现
description: 《操作系统概念-Java实现》 读书笔记
slug: 操作系统概念-Java实现
date: 2025-02-27 00:00:00+0000
image: cover.png
categories:
    - 计算机
tags:
    - 操作系统
weight: 1       # You can add weight to some posts to override the default sorting (date descending)
---

## 概述

### 第1章 导论

**操作系统**是管理计算机硬件的程序,它还为应用程序提供基础，充当计算机硬件和用户之间的中介

本章目标：

- 概括介绍操作系统的主要组件
- 概括介绍计算机系统的基本组织体系结构

### 1.1 操作系统做什么

计算机系统可以粗分为 4 个组成部分：

- 计算机硬件 （如CPU、内存、IO设备），为系统提供基本的计算资源
- 操作系统  控制和协调用户的应用程序对硬件的使用
- 系统程序、应用程序 （如 word、浏览器），规定了按照何种方式使用资源解决用户的问题
- 用户


### 1.2 计算机系统组织


**计算机系统操作**


![计算机系统](computer.png)

电脑启动 -> 初始化程序 (位于固件中) -> 引导程序定位操作系统内核，并把它装入内存 -> 操作系统执行第一个进程，如 init -> 等待事件发生

事件的发送：

- 硬件中断 （随时通过系统总线向 CPU 发出信号，以触发中断）
- 软件中断 （通过执行系统调用）

![中断](break.png)

CPU 执行 IO 中断，然后又恢复原来的进程执行

不同的计算机有不同的中断机制，共同的点是，中断必须将控制权交给合适的**中断服务历程**

**存储结构**

![存储设备的层次](storage.png)

**IO结构**

通用计算机系统由一个CPU和多个**设备控制器组成**，它们通过共同的总线连接起来。每个设备控制器负责特定类型的设备

通常操作系统为每个设备控制器提供一个**设备驱动程序**，设备驱动程序理解设备控制器，提供设备和操作系统之间统一的接口

为了开始 IO 操作，设备驱动程序在设备控制器中装载适当的寄存器，设备控制器检查这些寄存器的内容，以确定执行什么操作

这种 IO 中断驱动适合移动少量数据，但对于大量数据的移动，会带来超载问题，**DMA （直接内存访问）** 就是为了解决这个问题设计的

![计算机内部工作](work.png)

### 1.3 计算机系统体系结构

- 单处理器系统
- 多处理器系统

### 1.4 操作系统结构

多道程序能力：

- 分时系统 （CPU 来回切换执行任务）

分时系统在主存储器中保存几个作业，作业最开始存在于磁盘的作业池中

操作系统通过作业调度从作业池中选择作业加载入内存，这一决策过程叫做 CPU 调度

分时操作系统中，操作系统必须保证合理的响应时间，这有时通过交换来得到，其中进程被换入内存或由内存换出到磁盘

虚拟内存（主要优点是程序可以比物理内存大）

分时系统也提供文件系统

### 1.5 操作系统操作

**双重模式操作**

- 用户模式
- 内核模式

可以区分操作系统所执行的任务和用户所执行的任务

双重模式操作为人们提供了保护操作系统和用户程序不受错误用户程序影响的手段

![双重模式操作](double.png)

实现方式为：将能引起损害的机器指令作为**特权指令**， 硬件允许特权指令仅在内核模式下执行

定时器：

必须确保操作系统能维持对CPU的控制，也必须防止用户程序陷入死循环或不调用系统服务，并且不将控制权返回到操作系统

可将定时器设置为在给定时间后中断计算机，时间可以是固定的，也可以是可变的

### 1.6 进程管理

处于执行中的程序被称为进程

进程需要一定的资源，CPU时间、内存、文件、I/O设备来完成其任务

操作系统负责管理进程的如下活动：

- 创建和删除用户进程和系统进程
- 挂起和重启进程
- 提供进程同步机制
- 提供进程通信机制
- 提供死锁处理机制

### 1.7 内存管理

内存是一个大的字或字节的数组，每个字或字节都有自己的地址

内存是可以被 CPU 和 I/O 设备所共同快速访问的数据仓库

操作系统负责下列有关内存的活动：

- 记录内存的哪部分正在被使用以及被谁使用
- 当有内存空间时，决定哪些进程可以装入内存
- 根据需要释放分配和释放内存空间

### 1.8 存储管理

操作系统对存储设备的物理属性进行了抽象，定义了逻辑存储单元，就是文件

文件是由其创建者定义的一组相关信息的集合 （程序和数据）

操作系统负责下列有关文件管理的活动：

- 创建和删除文件
- 创建和删除目录来组织文件
- 提供操作文件和目录的原语
- 将文件映射到二级存储上
- 在稳定（非易失的）存储介质上备份文件

现代大多数操作系统都采用硬盘作为主要在线存储介质来存储程序和数据

操作系统负责下列有关硬盘管理的活动：

- 空闲空间管理
- 存储空间分配
- 硬盘调度

### 1.9 保护和安全

保护是一种控制进程或用户对计算机系统资源访问的机制

绝大多数操作系统维护一种用户名和相关用户标识（UID）的链表，这些数值对用户来说是唯一的

### 1.10 分布式系统

分布式系统是一组物理上分开的、可能各个异构的计算机系统通过网络连接在一起，为用户提供系统所维护的各种资源的计算机的集合

### 1.11 专用系统

- 实时嵌入系统 （运行实时操作系统，有明确切固定的时间约束）
- 多媒体系统 （多媒体数据必须根据确定的时间限制来传输流）
- 手持系统 （）


### 1.12 计算环境

- 传统环境 
    - 批处理计算机系统，以批量的方式处理作业
    - 分时系统采用定时器和调度算法，通过CPU迅速地循环进程，给其中每一个用户分配资源
- 客户-服务器计算
- 对等计算
- 基于 web 计算

## 第 2 章 操作系统结构

本章目标：

- 介绍操作系统为用户、进程和其他系统提供的服务
- 讨论组织操作系统的不同方法
- 解释如何安装、定制操作系统，以及如何启动操作系统

### 2.1 操作系统服务

一组操作系统服务提供对用户很有用的功能：

- 用户界面 （GUI、CLI、批界面）
- 程序执行 （系统必须能将程序装入内存并运行该程序）
- I/O操作 （运行程序需要的 IO）
- 文件系统操作 （读写文件和目录）
- 通信 （进程间交换信息）
- 错误检测 
- 资源分配 （多个用户或作业运行时，需要分配资源）
- 统计 （记录哪些用户使用了哪些资源）
- 保护和安全

### 2.2 操作系统的用户界面

- 命令解释程序
- 图形用户界面

### 2.3 系统调用

系统调用是获取操作系统所提供的服务的接口

应用程序员最常用的 API 有三种：

- Win32 API （Windows 系统）
- POSIX API （Unix、Linux 和 Mac OS X）
- Java API （JVM）

用 API 不用实际系统调用的好处：

- 可移植性强
- 实际的系统调用比 API 难用且更复杂

![系统调用](systemcall.png)


### 2.4 系统调用类型

系统调用可以分为 5 大类：

- 进程控制 （结束、放弃、装入、执行、创建进程、终止进程、取得进程属性、设置进程属性、等待时间、等待事件、唤醒事件、分配和释放内存）
- 文件管理 （创建文件、删除文件、打开、关闭、读、写、重定位、取得文件属性、设置文件属性）
- 设备管理 （请求设备、释放设备、读、写、重定位、取得设备属性、设置设备属性、逻辑连接或断开设备）
- 信息维护 （读取时间或日期、设置时间或日期、读取系统数据、设置系统数据、读取进程，文件或设备属性、设置进程，文件或设备属性）
- 通信 （创建，删除通信连接、发送，接收消息、传递状态信息、连接或断开远程设备）



**通信**

两种常见的通信模型：

- 消息传递模型 （通信进程通过交换消息来传递信息）
- 共享内存模型 （通过 shared memory create 和 shared memory attach 系统调用来获得其他进程所拥有的内存区域访问权）

### 2.5 系统程序

可以分为分类：

- 文件管理
- 状态信息
- 文件修改
- 



