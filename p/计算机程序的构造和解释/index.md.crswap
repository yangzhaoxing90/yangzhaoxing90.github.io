---
title: 计算机程序的构造和解释
description: 《计算机程序的构造和解释》 读书笔记
slug: 计算机程序的构造和解释
date: 2025-03-04 00:00:00+0000
math: true
image: cover.png
categories:
    - 计算机
tags:
    - Lisp
weight: 1       # You can add weight to some posts to override the default sorting (date descending)
---

## 资料

<https://mitp-content-server.mit.edu/books/content/sectbyfn/books_pres_0/6515/sicp.zip/index.html>

## 第 1 章 构造过程抽象

### 1.1 程序设计的基本元素

三种机制：

- 基本表达形式，用于表示语言所关心的最简单的个体
- 组合的方法，通过它们可以从较简单的东西出发构造出复合的元素
- 抽象的方法，通过它们可以为复合对象命名，并将它们当作单元去操作

表达式：

- 前缀表达式 (+ 1 2)
- 组合式 (+ (+ 1 2) 3)

命名和环境：

- 变量 (define size 2)
- 环境(全局环境) (值和符号的关联，需要的存储能力)

组合式求解：

- 求值该组合式的各个子表达式
- 将最左子表达式的值的那个过程应用于相应的实际参数，就是其他子表达式的值
- 树形累积 （如图）

![树形累积](tree.png)

特殊形式：

- define 
- 每种特殊形式都有自身的求值规则

复合过程：

- 数和运算是基本的数据和过程
- 组合式的嵌套提供了一种组织起多个操作的方法
- 定义是一种受限抽象手段，它为名字关联相应的值

过程定义:

- 威力更强大的抽象技术
- 通过它可以为复合操作提供名字
- (define (square x) (* x x))
- (square 3)

代换模型 （解释器的代换模型）

- 将实参代入过程运算，转换为组合式的运算

正则序和应用序：

- 正则序（完全展开后归约）
- 应用序 (先求值参数而后应用)

条件表达式和谓词

- cond 
- cond 后跟着对偶式，(p e) 
- else
- if (if p consequent alternative)
- and (e1, e2, ..., en)
- or (e1, e2, ..., en)
- not (e)

内部定义和块结构

- define 嵌套
- 词法作用域

### 1.2 过程与它们所产生的计算

线性的递归和迭代：

- 线性递归过程 （计算长度随轨迹线性增长）
- 线性迭代过程 （计算长度不会随轨迹增长，状态可以用固定数目的状态变量描述的计算过程）

树形递归：

- 斐波那契数的例子

增长的阶:

- 不同的计算过程在消耗资源和计算资源的速率上可能存在巨大差异，用增长的阶来描述这种差异
- $n$ 做为问题规模的度量，$R(n)$ 是一个计算过程在处理规模为 $n$ 的问题时所需的资源量
- 我们称 $R(n)$ 具有 $\theta(f(n))$ 的增长阶，记为 $R(n) = \theta(f(n))$,若存在 $k1$ 和 $k2$ 使得 $k1f(n) $


